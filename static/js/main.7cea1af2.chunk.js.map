{"version":3,"sources":["components/Login.js","components/Register.js","components/Header.js","App.js","serviceWorker.js","index.js","images/logo.png"],"names":["useStyles","makeStyles","container","margin","text","marginBottom","readFromLocalStorage","profile","window","gapi","auth2","getAuthInstance","currentUser","get","getBasicProfile","id","getId","first_name","getGivenName","last_name","getFamilyName","image_url","getImageUrl","email_id","getEmail","onLoginSuccess","location","history","googleUser","a","user","HOST_URL","host","includes","axios","post","query","headers","getAuthResponse","id_token","response","console","log","data","login","login_status","replace","sessionStorage","getItem","register","push","pathname","state","token","Login","classes","setItem","qs","parse","search","redirectTo","Container","className","onSuccess","onSignIn","clientId","cookiePolicy","disclaimer","form","Register","useState","room","year","setForm","handleChange","e","target","value","handleSubmit","username","phone","authorization","undefined","to","FormGroup","FormControl","required","InputLabel","htmlFor","Input","aria-describedby","onChange","FormHelperText","Button","type","onClick","Header","href","rel","src","logo","alt","App","path","exact","component","React","Component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7cea1af2.chunk.js","sourcesContent":["import React from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport { Container, makeStyles } from \"@material-ui/core\";\nimport qs from \"query-string\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles({\n  container: {\n    margin: \"3vh auto\",\n  },\n  text: {\n    marginBottom: \"2vh\",\n  },\n});\n\nconst clientId =\n  \"798725565697-sfibjdadpcan9ks908dnl8p5k1dncmoq.apps.googleusercontent.com\";\n\nfunction readFromLocalStorage() {\n  const auth2 = window.gapi.auth2.getAuthInstance();\n  const profile = auth2.currentUser.get().getBasicProfile();\n  return {\n    id: profile.getId(),\n    first_name: profile.getGivenName(),\n    last_name: profile.getFamilyName(),\n    image_url: profile.getImageUrl(),\n    email_id: profile.getEmail(),\n  };\n}\n\nconst onLoginSuccess = async (location, history, googleUser) => {\n  const user = readFromLocalStorage();\n  let HOST_URL = \"\";\n  if (window.location.host.includes(\"localhost\"))\n    HOST_URL = \"http://localhost:4000/graphql\";\n  else HOST_URL = \"https://phoenix.rctech.club/graphql\";\n  const response = await axios.post(HOST_URL, {\n    query: `\n    mutation {\n      login{\n        login_status\n        register\n      }\n    }\n    `,\n  },{\n    headers: {\n      'authorization': googleUser.getAuthResponse().id_token\n    }\n  });\n\n  console.log(response.data);\n  if (response.data.data.login.login_status)\n    window.location.replace(\n      `https://${sessionStorage.getItem(\"redirectTo\")}?id=${\n        googleUser.getAuthResponse().id_token\n      }`\n    );\n  if (response.data.data.login.register) {\n    history.push({\n      pathname: \"register\",\n      state: {\n        user,\n        token: googleUser.getAuthResponse().id_token,\n      },\n    });\n  }\n};\n\nconst Login = ({ history, location, googleUser }) => {\n  const classes = useStyles();\n  sessionStorage.setItem(\n    \"redirectTo\",\n    qs.parse(location.search).redirectTo || \"\"\n  );\n  return (\n    <Container className={classes.container}>\n      <div className={classes.text}>\n        <h3>Welcome RC Lee Hallmate!</h3>\n        <h4>To continue using our app, please sign in.</h4>\n      </div>\n      <GoogleLogin\n        onSuccess={googleUser => onLoginSuccess(location, history, googleUser)}\n        onSignIn={googleUser => onLoginSuccess(location, history, googleUser)}\n        clientId={clientId}\n        cookiePolicy={\"single_host_origin\"}\n      />\n    </Container>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport {\n  Button,\n  Container,\n  FormControl,\n  FormGroup,\n  FormHelperText,\n  Input,\n  InputLabel,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Redirect } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  container: {\n    margin: \"3vh auto\",\n  },\n  disclaimer: {\n    margin: \"1vmax\",\n  },\n  form: {\n    margin: \"2vh auto\",\n  },\n});\n\nconst Register = ({ location, history }) => {\n  const classes = useStyles();\n  const [form, setForm] = useState({\n    room: null,\n    year: null,\n  });\n\n  const handleChange = e => {\n    form[e.target.id] = e.target.value;\n    setForm(form);\n  };\n\n  const handleSubmit = async () => {\n    let HOST_URL = \"\";\n    if (window.location.host.includes(\"localhost\"))\n      HOST_URL = \"http://localhost:4000/graphql\";\n    else HOST_URL = \"https://phoenix.rctech.club/graphql\";\n    const response = await axios.post(\n      HOST_URL,\n      {\n        query: `\n      mutation{\n        register(\n          user: {\n            username: \"${form.username}\"\n            phone: \"${form.phone}\"\n            room_no: \"${form.room}\"\n          }\n        ){\n          username\n        }\n      }\n      `,\n      },\n      {\n        headers: {\n          authorization: location.state.token,\n        },\n      }\n    );\n    if (response.data.data.register === null) {\n      history.replace({ location: \"/\" });\n    } else {\n      window.location.replace(\n        `https://${sessionStorage.getItem(\"redirectTo\")}?id=${\n          location.state.token\n        }`\n      );\n    }\n  };\n\n  if (location.state === undefined) return <Redirect to=\"/\" />;\n  const token = location.state.token;\n  const user = location.state.user;\n\n  return (\n    <Container className={classes.container}>\n      <h3>{`Hello, ${user.first_name}`}</h3>\n      <div className={classes.disclaimer}>\n        To continue using our services, we require you to sign in with Google,\n        in which you have successfully completed that step. While we implicitly\n        have access to your Google account information, other important details\n        such as your room number are needed to provide the best experience.\n        <br />\n        By submitting the form below, you agree that we are allowed to store\n        your info in our database. We will not share your data with any other\n        3rd party applications and services.\n      </div>\n      <FormGroup className={classes.form}>\n        <FormControl required>\n          <InputLabel htmlFor=\"username\">Username</InputLabel>\n          <Input\n            id=\"username\"\n            aria-describedby=\"username-helper-text\"\n            onChange={handleChange}\n          />\n          <FormHelperText id=\"username-helper-text\">\n            For example: iamawesome\n          </FormHelperText>\n        </FormControl>\n        <FormControl required>\n          <InputLabel htmlFor=\"phone\">Phone (Hong Kong)</InputLabel>\n          <Input\n            id=\"phone\"\n            aria-describedby=\"phone-helper-text\"\n            onChange={handleChange}\n          />\n          <FormHelperText id=\"phone-helper-text\">\n            For example: +85212345678\n          </FormHelperText>\n        </FormControl>\n        <FormControl required>\n          <InputLabel htmlFor=\"room\">Room number</InputLabel>\n          <Input\n            id=\"room\"\n            aria-describedby=\"room-helper-text\"\n            onChange={handleChange}\n          />\n          <FormHelperText id=\"room-helper-text\">\n            For example: 924A\n          </FormHelperText>\n        </FormControl>\n        <Button type=\"submit\" onClick={handleSubmit}>\n          Submit\n        </Button>\n      </FormGroup>\n    </Container>\n  );\n};\n\nexport default Register;\n","import React from \"react\";\nimport logo from \"../images/logo.png\";\nimport { Container } from \"@material-ui/core\";\n\nfunction Header() {\n  return (\n    <Container className=\"App-header\">\n      <div>\n        <a href=\"https://www.rctech.club\" rel=\"noopener noreferrer\">\n          <img className=\"logo\" src={logo} alt=\"RCTECH\" />\n        </a>\n      </div>\n      <div className=\"header-text\">Ladybird</div>\n    </Container>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Header from \"./components/Header\";\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <div>\n          <Switch>\n            <Route path=\"/\" exact component={Login} />\n            <Route path=\"/register\" exact component={Register} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.83c07097.png\";"],"sourceRoot":""}