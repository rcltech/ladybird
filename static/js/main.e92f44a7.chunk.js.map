{"version":3,"sources":["images/logo.png","components/Header.js","components/withAuthConfigApollo.js","gql/login.js","components/CookiesPopup.js","components/LoginApollo.js","gql/register.js","components/RegisterApollo.js","App.js","serviceWorker.js","config/theme.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","logo","maxHeight","Header","classes","Container","href","rel","className","src","alt","withAuthConfigApollo","ChildComponent","props","useState","googleUser","setGoogleUser","location","sessionStorage","getItem","qs","parse","search","redirectTo","setItem","link","HttpLink","uri","headers","authorization","getAuthResponse","id_token","cache","InMemoryCache","client","ApolloClient","redirectUrl","clientID","LOGIN","gql","Transition","React","forwardRef","ref","Slide","direction","CookiesPopup","isOpen","open","setOpen","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","alert","url","window","replace","color","container","margin","text","redirect","history","buttonDisabled","setButtonDisabled","useMutation","login","cookies","Cookies","cookieValue","get","cookiesExist","Typography","variant","onSuccess","googleUserLogin","console","log","then","res","data","token","login_status","register","set","path","domain","length","user","profile","gapi","auth2","getAuthInstance","currentUser","getBasicProfile","getId","first_name","getGivenName","last_name","getFamilyName","image_url","getImageUrl","email_id","getEmail","readFromLocalStorage","push","pathname","state","catch","_","onRequest","onFailure","clientId","disabled","cookiePolicy","REGISTER","disclaimer","textAlign","form","privacyAgreement","setPrivacyAgreement","setForm","registerError","error","useEffect","validateForm","isEmpty","value","method","RegExp","test","name","field","validation","message","handleChange","e","target","handleSubmit","a","variables","response","regData","username","undefined","to","FormGroup","FormControl","required","InputLabel","htmlFor","Input","onChange","inputProps","maxLength","FormHelperText","type","FormControlLabel","control","Checkbox","checked","label","justifyContent","App","exact","component","LoginApollo","RegisterApollo","Boolean","hostname","match","responsiveFontSizes","createMuiTheme","palette","primary","light","main","dark","secondary","background","default","others","typography","h1","fontFamily","fontWeight","fontSize","h2","h3","h4","h5","h6","subtitle1","subtitle2","button","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e92f44a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.83c07097.png\";","import React from \"react\";\nimport logo from \"../images/logo.png\";\nimport { Container } from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles(theme => ({\n  logo: {\n    maxHeight: \"calc(112px + 1vmin)\",\n  },\n}));\n\nexport const Header = () => {\n  const classes = useStyles();\n  return (\n    <Container>\n      <div>\n        <a href=\"https://www.rctech.club\" rel=\"noopener noreferrer\">\n          <img className={classes.logo} src={logo} alt=\"RCTECH\" />\n        </a>\n      </div>\n    </Container>\n  );\n};\n","import React, { useState } from \"react\";\nimport { ApolloClient, HttpLink, InMemoryCache } from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport qs from \"query-string\";\n\nexport const withAuthConfigApollo = ChildComponent => {\n  const clientID =\n    \"798725565697-sfibjdadpcan9ks908dnl8p5k1dncmoq.apps.googleusercontent.com\";\n\n  const HOST_URL =\n    process.env.REACT_APP_ENV === \"development\"\n      ? \"http://localhost:4000/graphql\"\n      : \"https://phoenix.rctech.club/graphql\";\n\n  return props => {\n    const [googleUser, setGoogleUser] = useState();\n    const { location } = props;\n\n    if (\n      sessionStorage.getItem(\"redirectTo\") === \"\" ||\n      sessionStorage.getItem(\"redirectTo\") === null ||\n      qs.parse(location.search).redirectTo\n    ) {\n      sessionStorage.setItem(\n        \"redirectTo\",\n        qs.parse(location.search).redirectTo || \"\"\n      );\n    }\n\n    const link = new HttpLink({\n      uri: HOST_URL,\n      headers: {\n        authorization: googleUser ? googleUser.getAuthResponse().id_token : \"\",\n      },\n    });\n\n    const cache = new InMemoryCache();\n\n    const client = new ApolloClient({\n      cache,\n      link,\n    });\n\n    let redirectUrl = \"\";\n    if (sessionStorage.getItem(\"redirectTo\") !== \"\")\n      redirectUrl =\n        process.env.REACT_APP_ENV === \"development\"\n          ? `http://${sessionStorage.getItem(\"redirectTo\")}`\n          : `https://${sessionStorage.getItem(\"redirectTo\")}`;\n\n    return (\n      <ApolloProvider client={client}>\n        <ChildComponent\n          googleUser={googleUser}\n          setGoogleUser={setGoogleUser}\n          clientID={clientID}\n          redirectUrl={redirectUrl}\n          {...props}\n        />\n      </ApolloProvider>\n    );\n  };\n};\n","import { gql } from \"apollo-boost\";\n\nexport const LOGIN = gql`\n  mutation Login {\n    login {\n      token\n      login_status\n      register\n    }\n  }\n`;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const CookiesPopup = ({ isOpen }) => {\n  const [open, setOpen] = React.useState(isOpen);\n\n  const handleDisagree = () => {\n    alert(\n      \"We need your consent to provide our authentication services. You may contact RC Tech Club to find out more why this is important. You will now be redirected back to where you came from if possible.\"\n    );\n    if (sessionStorage.getItem(\"redirectTo\") !== \"\") {\n      const url =\n        process.env.NODE_ENV === \"development\"\n          ? `http://${sessionStorage.getItem(\"redirectTo\")}`\n          : `https://${sessionStorage.getItem(\"redirectTo\")}`;\n      window.location.replace(url);\n    }\n  };\n\n  const handleAgree = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        aria-labelledby=\"cookies-agreement\"\n        aria-describedby=\"cookies-agreement-description\"\n      >\n        <DialogTitle id=\"cookies-agreement\">\n          Allow RC Tech to store cookies?\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"cookies-agreement-description\">\n            Let us store cookies in your browser so that you can enjoy a smooth\n            personal experience logging into and using all of our applications.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDisagree} color=\"primary\">\n            Disagree\n          </Button>\n          <Button onClick={handleAgree} color=\"primary\">\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport { Container, makeStyles } from \"@material-ui/core\";\nimport Cookies from \"universal-cookie\";\nimport { Header } from \"./Header\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withAuthConfigApollo } from \"./withAuthConfigApollo\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { LOGIN } from \"../gql/login\";\nimport { CookiesPopup } from \"./CookiesPopup\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    margin: \"3vh auto\",\n  },\n  text: {\n    margin: \"4vh\",\n  },\n  redirect: {\n    margin: \"40px auto\",\n  },\n}));\n\nconst Login = ({\n  googleUser,\n  setGoogleUser,\n  clientID,\n  location,\n  history,\n  redirectUrl,\n}) => {\n  const classes = useStyles();\n  const [buttonDisabled, setButtonDisabled] = useState(false);\n  const [login] = useMutation(LOGIN);\n\n  const cookies = new Cookies();\n  const cookieValue = cookies.get(\"RCTC_USER\");\n  const cookiesExist = !cookieValue && cookieValue !== \"\";\n\n  const readFromLocalStorage = () => {\n    const auth2 = window.gapi.auth2.getAuthInstance();\n    const profile = auth2.currentUser.get().getBasicProfile();\n    return {\n      id: profile.getId(),\n      first_name: profile.getGivenName(),\n      last_name: profile.getFamilyName(),\n      image_url: profile.getImageUrl(),\n      email_id: profile.getEmail(),\n    };\n  };\n\n  const handleLogin = googleUserLogin => {\n    console.log(googleUserLogin);\n    setGoogleUser(googleUserLogin);\n    login()\n      .then(res => {\n        const {\n          login: { token, login_status, register },\n        } = res.data;\n\n        // If the login was successful\n        if (login_status) {\n          const cookieDomain =\n            process.env.REACT_APP_ENV === \"development\"\n              ? \"localhost\"\n              : \".rctech.club\";\n\n          cookies.set(\"RCTC_USER\", token, { path: \"/\", domain: cookieDomain });\n          if (redirectUrl.length > 0) {\n            window.location.replace(`${redirectUrl}?id=${token}`);\n          }\n        }\n\n        // If the user needs to register\n        if (register) {\n          const user = readFromLocalStorage();\n          history.push({\n            pathname: \"register\",\n            state: {\n              user,\n              googleUserLogin,\n              token: googleUserLogin.getAuthResponse().id_token,\n            },\n          });\n        }\n      })\n      .catch(_ => {\n        console.log(_);\n        alert(\"There was an error logging you in\");\n      });\n  };\n\n  const handleFailure = () => {\n    alert(\"Failed Google Login. Please try again.\");\n  };\n\n  const handleClicked = () => {\n    setButtonDisabled(true);\n  };\n\n  return (\n    <Container className={classes.container}>\n      <Header />\n      <div>\n        <Typography variant=\"h2\">Login</Typography>\n      </div>\n      <div className={classes.text}>\n        <Typography variant=\"h3\">Welcome RC Lee Hall mate!</Typography>\n        <Typography variant=\"h5\">\n          To continue using our app, please sign in using your HKU account.\n        </Typography>\n      </div>\n\n      <GoogleLogin\n        onSuccess={handleLogin}\n        onRequest={handleClicked}\n        onFailure={handleFailure}\n        clientId={clientID}\n        disabled={buttonDisabled}\n        cookiePolicy={\"single_host_origin\"}\n      />\n\n      <div className={classes.redirect}>\n        {redirectUrl !== \"\" ? (\n          <Typography variant=\"body1\">\n            If you keep coming back here after login, please{\" \"}\n            <a href={redirectUrl}>click here</a>\n          </Typography>\n        ) : (\n          <Typography variant=\"body1\">\n            Please re-visit the application that redirected you here. We\n            apologize for losing that information.\n          </Typography>\n        )}\n      </div>\n\n      <CookiesPopup isOpen={cookiesExist} />\n    </Container>\n  );\n};\n\nexport default withAuthConfigApollo(Login);\n","import { gql } from \"apollo-boost\";\n\nexport const REGISTER = gql`\n  mutation Register($username: String!, $phone: String!, $room_no: String!) {\n    register(user: { username: $username, phone: $phone, room_no: $room_no }) {\n      username\n    }\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Container,\n  FormControl,\n  FormGroup,\n  FormHelperText,\n  Input,\n  InputLabel,\n  Typography,\n  FormControlLabel,\n  Checkbox,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Redirect } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { REGISTER } from \"../gql/register\";\nimport { withAuthConfigApollo } from \"./withAuthConfigApollo\";\n\nconst useStyles = makeStyles({\n  container: {\n    margin: \"3vh auto\",\n  },\n  disclaimer: {\n    margin: \"2vh auto\",\n    textAlign: \"left\",\n  },\n  form: {\n    margin: \"2vh auto\",\n  },\n});\n\nconst Register = ({ setGoogleUser, location, history }) => {\n  const classes = useStyles();\n  const [privacyAgreement, setPrivacyAgreement] = useState(false);\n  const [form, setForm] = useState({});\n  const [register, { error: registerError }] = useMutation(REGISTER);\n\n  useEffect(() => {\n    if (location.state && location.state.googleUserLogin) {\n      setGoogleUser(location.state.googleUserLogin);\n    }\n    if (registerError) {\n      alert(\n        \"There was an error completing registration. Please register again.\"\n      );\n      history.replace({ location: \"/\" });\n    }\n  }, [registerError, location, history, setGoogleUser]);\n\n  const validateForm = form => {\n    // validate form fields\n    const isEmpty = value => !value || value === \"\";\n    const fields = [\n      {\n        id: \"username\",\n        method: value => RegExp(\"^[0-9A-z]{4,20}$\").test(value),\n      },\n      {\n        id: \"phone\",\n        method: value => RegExp(\"^[0-9]{8}$\").test(value),\n      },\n      {\n        id: \"room_no\",\n        name: \"room number\",\n        method: value => RegExp(\"^[1-9][0-9]{2,3}([A,B])?$\").test(value),\n      },\n    ];\n    for (const field of fields) {\n      const value = form[field.id];\n      if (isEmpty(value) || !field.method(value))\n        return {\n          validation: false,\n          message: `Your ${field.name ||\n            field.id} of ${value} is not accepted.`,\n        };\n    }\n    // validate privacy agreement\n    if (!privacyAgreement)\n      return {\n        validation: false,\n        message: \"You need to agree to our privacy terms.\",\n      };\n    return { validation: true };\n  };\n\n  const handleChange = e => {\n    form[e.target.id] = e.target.value;\n    setForm(form);\n  };\n\n  const handleSubmit = async () => {\n    const { validation, message } = validateForm(form);\n    if (validation) {\n      try {\n        const response = await register({ variables: form });\n        const regData = response.data;\n        if (regData && regData.register && regData.register.username) {\n          // register is successful, now go back to login\n          alert(\"Registration complete! Login again to continue\");\n          history.replace({ location: \"/\" });\n        } else {\n          alert(\"There was an error with registration. Please try again.\");\n          history.replace({ location: \"/\" });\n        }\n      } catch (e) {\n        alert(\"There was an error with registration. Please try again\");\n        history.replace({ location: \"/\" });\n      }\n    } else alert(message);\n  };\n\n  if (location.state === undefined) return <Redirect to=\"/\" />;\n  const user = location.state.user;\n\n  return (\n    <Container className={classes.container}>\n      <Typography variant=\"h3\">{`Hello, ${user.first_name}`}</Typography>\n\n      <FormGroup className={classes.form}>\n        <FormControl required>\n          <InputLabel htmlFor=\"username\">Username</InputLabel>\n          <Input\n            id=\"username\"\n            aria-describedby=\"username-helper-text\"\n            onChange={handleChange}\n            inputProps={{ maxLength: 20 }}\n          />\n          <FormHelperText id=\"username-helper-text\">\n            For example: iamawesome. Only alphanumeric characters are allowed\n            with a minimum length of 4 and a maximum length of 20.\n          </FormHelperText>\n        </FormControl>\n        <FormControl required>\n          <InputLabel htmlFor=\"phone\">Phone (Hong Kong)</InputLabel>\n          <Input\n            id=\"phone\"\n            aria-describedby=\"phone-helper-text\"\n            onChange={handleChange}\n            type={\"number\"}\n            inputProps={{ maxLength: 8 }}\n          />\n          <FormHelperText id=\"phone-helper-text\">\n            For example: 12345678\n          </FormHelperText>\n        </FormControl>\n        <FormControl required>\n          <InputLabel htmlFor=\"room_no\">Room number</InputLabel>\n          <Input\n            id=\"room_no\"\n            aria-describedby=\"room-helper-text\"\n            onChange={handleChange}\n            inputProps={{ maxLength: 5 }}\n          />\n          <FormHelperText id=\"room-helper-text\">\n            For example: 924A\n          </FormHelperText>\n        </FormControl>\n        <div className={classes.disclaimer}>\n          <Typography variant={\"h5\"}>Privacy Agreement</Typography>\n          <Typography variant={\"body1\"}>\n            To continue using our services, we require you to sign in with\n            Google, in which you have successfully completed that step. While we\n            implicitly have access to your Google account information, other\n            important details such as your room number are needed to deliver the\n            best user experience. We will not share your personal data with any\n            other 3rd party applications and services.\n          </Typography>\n          <br />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={privacyAgreement}\n                onChange={() => setPrivacyAgreement(!privacyAgreement)}\n                name=\"privacyAgreement\"\n                color=\"primary\"\n              />\n            }\n            label=\"I agree to the privacy agreement.\"\n          />\n        </div>\n        <Button type=\"submit\" onClick={handleSubmit}>\n          Submit\n        </Button>\n      </FormGroup>\n    </Container>\n  );\n};\n\nexport default withAuthConfigApollo(Register);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport LoginApollo from \"./components/LoginApollo\";\nimport RegisterApollo from \"./components/RegisterApollo\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    margin: \"auto\",\n  },\n}));\n\nexport const App = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={LoginApollo} />\n          <Route path=\"/register\" exact component={RegisterApollo} />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\n\nexport const theme = responsiveFontSizes(\n  createMuiTheme({\n    palette: {\n      primary: {\n        light: \"#727394\",\n        main: \"#464866\",\n        dark: \"#1d213b\",\n      },\n      secondary: {\n        main: \"#ef9a9a\",\n      },\n      background: {\n        default: \"#fff\",\n      },\n      error: {\n        main: \"#B00020\",\n      },\n      user: {\n        main: \"#ce93d8\",\n      },\n      others: {\n        main: \"#9fa8da\",\n      },\n    },\n    typography: {\n      h1: {\n        fontFamily: \"Poppins, sans-serif\",\n        fontWeight: 200,\n        fontSize: \"4em\",\n        margin: \"20px 0\",\n      },\n      h2: {\n        fontFamily: \"Poppins, sans-serif\",\n        fontWeight: 200,\n        margin: \"20px 0\",\n        fontSize: \"3em\",\n      },\n      h3: {\n        fontFamily: \"Poppins, sans-serif\",\n        fontWeight: 200,\n        fontSize: \"2em\",\n        margin: \"20px 0\",\n      },\n      h4: {\n        fontFamily: \"Poppins, sans-serif\",\n        fontWeight: 200,\n        margin: \"20px 0\",\n      },\n      h5: {\n        fontFamily: \"Poppins, sans-serif\",\n        fontWeight: 200,\n        fontSize: \"1em\",\n      },\n      h6: {\n        fontFamily: \"Roboto, sans-serif\",\n        fontWeight: 400,\n        fontSize: \"1em\",\n      },\n      subtitle1: {\n        fontFamily: \"Roboto, sans-serif\",\n        fontWeight: 600,\n      },\n      subtitle2: {\n        fontFamily: \"Roboto, sans-serif\",\n        fontWeight: 200,\n      },\n      button: {\n        fontFamily: \"Poppins, sans-serif\",\n        fontWeight: 300,\n      },\n    },\n  })\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { theme } from \"./config/theme\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}