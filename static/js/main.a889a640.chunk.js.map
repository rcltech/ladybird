{"version":3,"sources":["images/logo.png","components/Header.js","config/GoogleUserContext.js","components/Login.js","gql/register.js","components/withAuthConfigApollo.js","components/Register.js","App.js","serviceWorker.js","config/theme.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","container","display","justifyItems","justifyContent","logo","maxHeight","Header","classes","Container","className","Link","href","rel","src","alt","GoogleUserContext","React","createContext","googleUser","undefined","user_details","id","first_name","last_name","image_url","email_id","setCurrentGoogleUser","flexDirection","margin","textAlign","text","redirect","Login","location","history","useState","buttonDisabled","setButtonDisabled","useContext","errorToast","useToast","redirectUrl","sessionStorage","getItem","cookies","Cookies","useEffect","qs","parse","search","redirectTo","setItem","sendLoginRequest","token","a","fetch","method","credentials","headers","authorization","response","JSON","console","error","handleLogin","googleUserLogin","getAuthResponse","id_token","registered","logged_in","log","set","path","domain","length","window","replace","push","pathname","state","title","description","status","duration","isClosable","Typography","variant","onSuccess","onRequest","onFailure","isSignedIn","clientId","disabled","cookiePolicy","uxMode","ChildComponent","REGISTER","gql","disclaimer","form","withAuthConfigApollo","toast","privacyAgreement","setPrivacyAgreement","setForm","useMutation","register","registerError","validateForm","isEmpty","value","RegExp","test","name","field","validation","message","handleChange","e","target","handleSubmit","variables","regData","data","username","alert","to","FormGroup","FormControl","required","InputLabel","htmlFor","Input","aria-describedby","onChange","inputProps","maxLength","FormHelperText","type","FormControlLabel","control","Checkbox","checked","color","label","Button","onClick","props","link","HttpLink","uri","cache","InMemoryCache","client","ApolloClient","App","setGoogleUser","setUserDetails","useCallback","user","profile","gapi","auth2","getAuthInstance","currentUser","get","getBasicProfile","getId","getGivenName","getFamilyName","getImageUrl","getEmail","useGoogleUser","position","Provider","exact","component","LoginApollo","RegisterApollo","Boolean","hostname","match","responsiveFontSizes","createMuiTheme","palette","primary","light","main","dark","secondary","background","default","others","typography","h1","fontFamily","fontWeight","fontSize","h2","h3","h4","h5","h6","subtitle1","subtitle2","button","ReactDOM","render","ThemeProvider","chakraTheme","CssBaseline","CSSReset","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a889a640.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.83c07097.png\";","import React from \"react\";\nimport logo from \"../images/logo.png\";\nimport { Container, Link } from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    justifyItems: \"center\",\n    justifyContent: \"center\",\n  },\n  logo: {\n    maxHeight: \"calc(112px + 1vmin)\",\n  },\n}));\n\nexport const Header = () => {\n  const classes = useStyles();\n  return (\n    <Container className={classes.container}>\n      <Link href=\"https://www.rctech.club\" rel=\"noopener noreferrer\">\n        <img className={classes.logo} src={logo} alt=\"RCTECH\" />\n      </Link>\n    </Container>\n  );\n};\n","import React, { useCallback, useState } from \"react\";\n\nexport const GoogleUserContext = React.createContext({\n  googleUser: undefined,\n  user_details: {\n    id: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    image_url: \"\",\n    email_id: \"\",\n  },\n  setCurrentGoogleUser: () => {},\n});\n\nexport const useGoogleUser = () => {\n  const [googleUser, setGoogleUser] = useState(undefined);\n  const [user_details, setUserDetails] = useState({});\n  const setCurrentGoogleUser = useCallback(user => {\n    const auth2 = window.gapi.auth2.getAuthInstance();\n    const profile = auth2.currentUser.get().getBasicProfile();\n    setUserDetails({\n      id: profile.getId(),\n      first_name: profile.getGivenName(),\n      last_name: profile.getFamilyName(),\n      image_url: profile.getImageUrl(),\n      email_id: profile.getEmail(),\n    });\n    setGoogleUser(user);\n  }, []);\n  return { googleUser, user_details, setCurrentGoogleUser };\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport { Container, Link, makeStyles } from \"@material-ui/core\";\nimport Cookies from \"universal-cookie\";\nimport { Header } from \"./Header\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { GoogleUserContext } from \"../config/GoogleUserContext\";\nimport qs from \"query-string\";\nimport { useToast } from \"@chakra-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"grid\",\n    flexDirection: \"column\",\n    margin: \"3vh auto\",\n    justifyContent: \"center\",\n    justifyItems: \"center\",\n    textAlign: \"center\",\n  },\n  text: {\n    margin: \"4vh\",\n  },\n  redirect: {\n    margin: \"40px auto\",\n  },\n}));\n\nconst Login = ({ location, history }) => {\n  const classes = useStyles();\n  const [buttonDisabled, setButtonDisabled] = useState(false);\n  const { setCurrentGoogleUser } = useContext(GoogleUserContext);\n  const errorToast = useToast();\n\n  const clientID =\n    \"798725565697-sfibjdadpcan9ks908dnl8p5k1dncmoq.apps.googleusercontent.com\";\n\n  const redirectUrl = sessionStorage.getItem(\"redirectTo\");\n  const cookies = new Cookies();\n\n  useEffect(() => {\n    if (redirectUrl === null || redirectUrl === \"\")\n      if (qs.parse(location.search).redirectTo !== \"\") {\n        sessionStorage.setItem(\n          \"redirectTo\",\n          qs.parse(location.search).redirectTo\n        );\n      }\n  }, [location.search, redirectUrl]);\n\n  const sendLoginRequest = async token => {\n    const URL =\n      process.env.REACT_APP_ENV === \"development\"\n        ? \"http://localhost:4000/oauth/user/login\"\n        : \"https://phoenix.rctech.club/oauth/user/login\";\n    try {\n      const response = await fetch(URL, {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          authorization: token,\n        },\n      });\n      return JSON.parse(await response.text());\n    } catch (e) {\n      console.error(e);\n      return null;\n    }\n  };\n\n  const handleLogin = async googleUserLogin => {\n    setCurrentGoogleUser(googleUserLogin);\n    const response = await sendLoginRequest(\n      googleUserLogin.getAuthResponse().id_token\n    );\n    if (response) {\n      const { registered, logged_in, token } = response;\n      console.log(response);\n      if (registered) {\n        if (logged_in) {\n          const cookieDomain =\n            process.env.REACT_APP_ENV === \"development\"\n              ? \"localhost\"\n              : \".rctech.club\";\n          cookies.set(\"RCTC_USER\", token, { path: \"/\", domain: cookieDomain });\n          if (redirectUrl && redirectUrl.length > 0) {\n            window.location.replace(\n              `${\n                process.env.REACT_APP_ENV === \"development\"\n                  ? \"http://\"\n                  : \"https://\"\n              }${redirectUrl}?id=${token}`\n            );\n          }\n        }\n      } else {\n        history.push({\n          pathname: \"register\",\n          state: {\n            googleUserLogin,\n            token: googleUserLogin.getAuthResponse().id_token,\n          },\n        });\n      }\n    } else {\n      errorToast({\n        title: \"User login error\",\n        description:\n          \"The user login details did not work. Try logging in again.\",\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n      });\n    }\n  };\n\n  const handleFailure = () => {\n    errorToast({\n      title: \"Google login did not work!\",\n      description:\n        \"Please close the application and re-open it too see if this works.\",\n      status: \"error\",\n      duration: 9000,\n      isClosable: true,\n    });\n  };\n\n  const handleClicked = () => {\n    setButtonDisabled(true);\n  };\n\n  return (\n    <Container className={classes.container}>\n      <Header />\n      <Container>\n        <Typography variant=\"h2\">Login</Typography>\n      </Container>\n      <Container className={classes.text}>\n        <Typography variant=\"h3\">Welcome RC Lee Hall mate!</Typography>\n        <Typography variant=\"h5\">\n          To continue using our app, please sign in using your HKU account.\n        </Typography>\n      </Container>\n\n      <GoogleLogin\n        onSuccess={handleLogin}\n        onRequest={handleClicked}\n        onFailure={handleFailure}\n        isSignedIn\n        clientId={clientID}\n        disabled={buttonDisabled}\n        cookiePolicy={\"single_host_origin\"}\n        uxMode={\"redirect\"}\n      />\n\n      <Container className={classes.redirect}>\n        {redirectUrl && redirectUrl !== \"\" ? (\n          <Typography variant=\"body1\">\n            If you keep coming back here after login, please{\" \"}\n            <Link href={redirectUrl}>click here</Link>\n          </Typography>\n        ) : (\n          <Typography variant=\"body1\">\n            Please re-visit the application that redirected you here. We\n            apologize for losing that information.\n          </Typography>\n        )}\n      </Container>\n    </Container>\n  );\n};\n\nexport default Login;\n","import { gql } from \"apollo-boost\";\n\nexport const REGISTER = gql`\n  mutation Register($username: String!, $phone: String!, $room_no: String!) {\n    register(user: { username: $username, phone: $phone, room_no: $room_no }) {\n      username\n    }\n  }\n`;\n","import React, { useContext } from \"react\";\nimport { ApolloClient, HttpLink, InMemoryCache } from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { GoogleUserContext } from \"../config/GoogleUserContext\";\n\nexport const withAuthConfigApollo = ChildComponent => {\n  const HOST_URL =\n    process.env.REACT_APP_ENV === \"development\"\n      ? \"http://localhost:4000/graphql\"\n      : \"https://phoenix.rctech.club/graphql\";\n\n  return props => {\n    const { googleUser } = useContext(GoogleUserContext);\n\n    const link = new HttpLink({\n      uri: HOST_URL,\n      headers: {\n        authorization: googleUser ? googleUser.getAuthResponse().id_token : \"\",\n      },\n    });\n\n    const cache = new InMemoryCache();\n\n    const client = new ApolloClient({\n      cache,\n      link,\n    });\n\n    return (\n      <ApolloProvider client={client}>\n        <ChildComponent {...props} />\n      </ApolloProvider>\n    );\n  };\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Container,\n  FormControl,\n  FormGroup,\n  FormHelperText,\n  Input,\n  InputLabel,\n  Typography,\n  FormControlLabel,\n  Checkbox,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Redirect } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { REGISTER } from \"../gql/register\";\nimport { withAuthConfigApollo } from \"./withAuthConfigApollo\";\nimport { GoogleUserContext } from \"../config/GoogleUserContext\";\nimport { useToast } from \"@chakra-ui/core\";\n\nconst useStyles = makeStyles({\n  container: {\n    margin: \"3vh auto\",\n  },\n  disclaimer: {\n    margin: \"2vh auto\",\n    textAlign: \"left\",\n  },\n  form: {\n    margin: \"2vh auto\",\n  },\n});\n\nconst Register = ({ location, history }) => {\n  const classes = useStyles();\n  const toast = useToast();\n  const [privacyAgreement, setPrivacyAgreement] = useState(false);\n  const [form, setForm] = useState({});\n  const [register, { error: registerError }] = useMutation(REGISTER);\n  const { googleUser, user_details, setCurrentGoogleUser } = useContext(\n    GoogleUserContext\n  );\n\n  useEffect(() => {\n    if (googleUser) setCurrentGoogleUser(googleUser);\n    else history.replace({ location: \"/\" });\n\n    if (registerError) {\n      toast({\n        title: \"Error in registration\",\n        description:\n          \"Please try to register again. Contact us at contact@rctech.club if this keeps happening\",\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n      });\n      history.replace({ location: \"/\" });\n    }\n  }, [googleUser, history, registerError, setCurrentGoogleUser, toast]);\n\n  const validateForm = form => {\n    const isEmpty = value => !value || value === \"\";\n    const fields = [\n      {\n        id: \"username\",\n        method: value => RegExp(\"^[0-9A-z]{4,20}$\").test(value),\n      },\n      {\n        id: \"phone\",\n        method: value => RegExp(\"^[0-9]{8}$\").test(value),\n      },\n      {\n        id: \"room_no\",\n        name: \"room number\",\n        method: value => RegExp(\"^[1-9][0-9]{2,3}([A,B])?$\").test(value),\n      },\n    ];\n\n    for (const field of fields) {\n      const value = form[field.id];\n      if (isEmpty(value) || !field.method(value))\n        return {\n          validation: false,\n          message: `Your ${field.name ||\n            field.id} of ${value} is not accepted.`,\n        };\n    }\n\n    if (!privacyAgreement)\n      return {\n        validation: false,\n        message: \"You need to agree to our privacy terms.\",\n      };\n    return { validation: true };\n  };\n\n  const handleChange = e => {\n    form[e.target.id] = e.target.value;\n    setForm(form);\n  };\n\n  const handleSubmit = async () => {\n    const { validation, message } = validateForm(form);\n    if (validation) {\n      try {\n        const response = await register({ variables: form });\n        const regData = response.data;\n        if (regData && regData.register && regData.register.username) {\n          // register is successful, now go back to login\n          toast({\n            title: \"Account created.\",\n            description:\n              \"We've created your account for you. Please login again.\",\n            status: \"success\",\n            duration: 9000,\n            isClosable: true,\n          });\n          history.replace({ location: \"/\" });\n        } else {\n          toast({\n            title: \"Error in registration\",\n            description:\n              \"Please try to register again. Contact us at contact@rctech.club if this keeps happening\",\n            status: \"error\",\n            duration: 9000,\n            isClosable: true,\n          });\n          history.replace({ location: \"/\" });\n        }\n      } catch (e) {\n        toast({\n          title: \"Error in registration\",\n          description:\n            \"Please try to register again. Contact us at contact@rctech.club if this keeps happening\",\n          status: \"error\",\n          duration: 9000,\n          isClosable: true,\n        });\n        history.replace({ location: \"/\" });\n      }\n    } else alert(message);\n  };\n\n  if (location.state === undefined) return <Redirect to=\"/\" />;\n\n  return (\n    <Container className={classes.container}>\n      <Typography variant=\"h3\">{`Hello, ${user_details.first_name}`}</Typography>\n      <FormGroup className={classes.form}>\n        <FormControl required>\n          <InputLabel htmlFor=\"username\">Username</InputLabel>\n          <Input\n            id=\"username\"\n            aria-describedby=\"username-helper-text\"\n            onChange={handleChange}\n            inputProps={{ maxLength: 20 }}\n          />\n          <FormHelperText id=\"username-helper-text\">\n            For example: iamawesome. Only alphanumeric characters are allowed\n            with a minimum length of 4 and a maximum length of 20.\n          </FormHelperText>\n        </FormControl>\n        <FormControl required>\n          <InputLabel htmlFor=\"phone\">Phone (Hong Kong)</InputLabel>\n          <Input\n            id=\"phone\"\n            aria-describedby=\"phone-helper-text\"\n            onChange={handleChange}\n            type={\"number\"}\n            inputProps={{ maxLength: 8 }}\n          />\n          <FormHelperText id=\"phone-helper-text\">\n            For example: 12345678\n          </FormHelperText>\n        </FormControl>\n        <FormControl required>\n          <InputLabel htmlFor=\"room_no\">Room number</InputLabel>\n          <Input\n            id=\"room_no\"\n            aria-describedby=\"room-helper-text\"\n            onChange={handleChange}\n            inputProps={{ maxLength: 5 }}\n          />\n          <FormHelperText id=\"room-helper-text\">\n            For example: 924A\n          </FormHelperText>\n        </FormControl>\n        <Container className={classes.disclaimer}>\n          <Typography variant={\"h5\"}>Privacy Agreement</Typography>\n          <Typography variant={\"body1\"}>\n            To continue using our services, we require you to sign in with\n            Google, in which you have successfully completed that step. While we\n            implicitly have access to your Google account information, other\n            important details such as your room number are needed to deliver the\n            best user experience. We will not share your personal data with any\n            other 3rd party applications and services.\n          </Typography>\n          <br />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={privacyAgreement}\n                onChange={() => setPrivacyAgreement(!privacyAgreement)}\n                name=\"privacyAgreement\"\n                color=\"primary\"\n              />\n            }\n            label=\"I agree to the privacy agreement.\"\n          />\n        </Container>\n        <Button type=\"submit\" onClick={handleSubmit}>\n          Submit\n        </Button>\n      </FormGroup>\n    </Container>\n  );\n};\n\nexport default withAuthConfigApollo(Register);\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport LoginApollo from \"./components/Login\";\nimport RegisterApollo from \"./components/Register\";\nimport { GoogleUserContext, useGoogleUser } from \"./config/GoogleUserContext\";\nimport { useToast } from \"@chakra-ui/core\";\n\nexport const App = () => {\n  const toast = useToast();\n  const googleUser = useGoogleUser();\n  useEffect(() => {\n    toast({\n      position: \"bottom-left\",\n      title: \"We use cookies to help you login\",\n      description: \"When you login on this website, you agree to use cookies\",\n      status: \"info\",\n      duration: 9000,\n      isClosable: true,\n    });\n  }, [toast]);\n\n  return (\n    <GoogleUserContext.Provider value={googleUser}>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={LoginApollo} />\n          <Route path=\"/register\" exact component={RegisterApollo} />\n        </Switch>\n      </Router>\n    </GoogleUserContext.Provider>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\n\nexport const theme = responsiveFontSizes(\n  createMuiTheme({\n    palette: {\n      primary: {\n        light: \"#727394\",\n        main: \"#464866\",\n        dark: \"#1d213b\",\n      },\n      secondary: {\n        main: \"#ef9a9a\",\n      },\n      background: {\n        default: \"#fff\",\n      },\n      error: {\n        main: \"#B00020\",\n      },\n      user: {\n        main: \"#ce93d8\",\n      },\n      others: {\n        main: \"#9fa8da\",\n      },\n    },\n    typography: {\n      h1: {\n        fontFamily: \"Poppins, sans-serif\",\n        fontWeight: 200,\n        fontSize: \"4em\",\n        margin: \"20px 0\",\n      },\n      h2: {\n        fontFamily: \"Poppins, sans-serif\",\n        fontWeight: 200,\n        margin: \"20px 0\",\n        fontSize: \"3em\",\n      },\n      h3: {\n        fontFamily: \"Poppins, sans-serif\",\n        fontWeight: 200,\n        fontSize: \"2em\",\n        margin: \"20px 0\",\n      },\n      h4: {\n        fontFamily: \"Poppins, sans-serif\",\n        fontWeight: 200,\n        margin: \"20px 0\",\n      },\n      h5: {\n        fontFamily: \"Poppins, sans-serif\",\n        fontWeight: 200,\n        fontSize: \"1em\",\n      },\n      h6: {\n        fontFamily: \"Roboto, sans-serif\",\n        fontWeight: 400,\n        fontSize: \"1em\",\n      },\n      subtitle1: {\n        fontFamily: \"Roboto, sans-serif\",\n        fontWeight: 600,\n      },\n      subtitle2: {\n        fontFamily: \"Roboto, sans-serif\",\n        fontWeight: 200,\n      },\n      button: {\n        fontFamily: \"Poppins, sans-serif\",\n        fontWeight: 300,\n      },\n    },\n  })\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { theme } from \"./config/theme\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider as ChakraThemeProvider } from \"@chakra-ui/core\";\nimport { theme as chakraTheme } from \"@chakra-ui/core\";\nimport CSSReset from \"@chakra-ui/core/dist/CSSReset\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <ChakraThemeProvider theme={chakraTheme}>\n      <CssBaseline />\n      <CSSReset />\n      <App />\n    </ChakraThemeProvider>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}